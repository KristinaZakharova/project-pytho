# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

list = [4, 'say', 456, '!abracadabra', [3, 76, 29]]
print(list)
for el in list:
    print(f'type {el} -')
    print(type(el))

# 2. Для списка реализовать обмен значений соседних элементов.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
# При нечётном количестве элементов последний сохранить на своём месте.
# Для заполнения списка элементов нужно использовать функцию input().

str = input('push elements through a  space ')
print(str)
str2 = str.split()
print(str2)
print(len(str2))
n = len(str2)
print('n = ', n)
a = 0

if n % 2 == 0:
    while a < n :
        print('before ', str2)
        str2[a], str2[a + 1] = str2[a + 1], str2[a]
        print('after ', str2)
        a = a + 2
elif n == 1:
    print("can't do it")
elif n > 1 and n % 2 == 1:
    while a < n - 1:
        print('before ', str2)
        str2[a], str2[a + 1] = str2[a + 1], str2[a]
        print('after ', str2)
        a = a + 2
print('end')

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить, к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и dict

print('dict')
month = {'winter ': [12, 1, 2], 'spring ': [3, 4, 5], 'summer ': [6, 7, 8], 'autumn ': [9, 10, 11]}
m = int(input('enter month number '))
for el in month:
    if m in month[el]:
            print(el)

print('list')
m = int(input('enter month number '))
mlist = ['Happy new year!', 'winter', 'winter', 'spring', 'spring', 'spring', 'summer', 'summer', 'summer', 'autumn', 'autumn', 'autumn', 'winter']
print(mlist[m])

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки.
# Строки нужно пронумеровать.
# Если слово длинное, выводить только первые 10 букв в слове.

str = input('print some words through space ')
list = str.split()
print(list)

for i, list in enumerate(list):
    print(i + 1, list[:10])



# 5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает.
# У пользователя нужно запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].
#
my_list = [7, 5, 3, 3, 2]
print('Rating before ', my_list)
rating = int(input('input positive integer '))
# print(len(my_list))

i = 1
for el in my_list:
    if el < rating:
        n = my_list.index(el)
        my_list.insert(n, rating)
        break
    elif i == len(my_list):
        my_list.append(rating)
        break
    else:
        i = i + 1
print('Rating after ', my_list)




# 6. (Дополнительно) Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами, то есть характеристиками товара:
# название, цена, количество, единица измерения. Структуру нужно сформировать программно, запросив все данные у пользователя.
# Пример готовой структуры:
#
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
#


# Нужно собрать аналитику о товарах.
# Реализовать словарь, в котором каждый ключ — характеристика товара, например, название.
# Тогда значение — список значений-характеристик, например, список названий товаров.
# Пример:
#
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }

